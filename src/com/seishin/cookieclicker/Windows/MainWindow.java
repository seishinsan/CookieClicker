/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.seishin.cookieclicker.Windows;

import com.seishin.cookieclicker.daemons.MinerDaemon;
import java.io.IOException;
import java.text.DecimalFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;

/**
 *
 * @author Seish
 */
public class MainWindow extends javax.swing.JFrame implements Runnable {

    /**
     * Creates new form MainWindow
     */
    Thread minerDaemonThread;
    MinerDaemon minerDaemon;
    DecimalFormat f;

    public MainWindow() throws IOException, InterruptedException {
        minerDaemon = new MinerDaemon();
        minerDaemon.loadGame();
        Thread.sleep(1000);
        minerDaemonThread = new Thread(minerDaemon);
        minerDaemonThread.start();

        f = new DecimalFormat("#0.00");
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cookiesLabel = new javax.swing.JLabel();
        cookiesPerClickLabel = new javax.swing.JLabel();
        cookiesPerSecondLabel = new javax.swing.JLabel();
        cookieBtn = new javax.swing.JButton();
        mainToolBar = new javax.swing.JToolBar();
        exitBtn = new javax.swing.JButton();
        restartBtn = new javax.swing.JButton();
        cookiesPerSecondValueLabel = new javax.swing.JLabel();
        cookiesPerClickValueLabel = new javax.swing.JLabel();
        cookiesValueLabel = new javax.swing.JLabel();
        farmBtn = new javax.swing.JButton();
        factoryBtn = new javax.swing.JButton();
        dealerBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        factoryOwnLabel = new javax.swing.JLabel();
        farmOwnLabel = new javax.swing.JLabel();
        dealerOwnLabel = new javax.swing.JLabel();
        dealerValLabel = new javax.swing.JLabel();
        factoryValLabel = new javax.swing.JLabel();
        farmValLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CookieClicker V1.0");
        setLocationByPlatform(true);
        setResizable(false);

        cookiesLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cookiesLabel.setText("Cookies Gesamt:");

        cookiesPerClickLabel.setText("Cookies Pro Klick:");

        cookiesPerSecondLabel.setText("Cookies Pro Sekunde:");

        cookieBtn.setFont(new java.awt.Font("Tw Cen MT", 1, 48)); // NOI18N
        cookieBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Cookie.png"))); // NOI18N
        cookieBtn.setBorder(null);
        cookieBtn.setBorderPainted(false);
        cookieBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cookieBtn.setFocusPainted(false);
        ImageIcon ic = new ImageIcon("/resources/Cookie.png");
        cookieBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cookieBtnActionPerformed(evt);
            }
        });

        mainToolBar.setFloatable(false);
        mainToolBar.setRollover(true);

        exitBtn.setText("Beenden");
        exitBtn.setFocusable(false);
        exitBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        exitBtn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        exitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBtnActionPerformed(evt);
            }
        });
        mainToolBar.add(exitBtn);

        restartBtn.setText("Neustart");
        restartBtn.setFocusable(false);
        restartBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        restartBtn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        restartBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restartBtnActionPerformed(evt);
            }
        });
        mainToolBar.add(restartBtn);

        cookiesPerSecondValueLabel.setText(f.format(minerDaemon.getCookiesPerSecond()));

        cookiesPerClickValueLabel.setText(f.format(minerDaemon.getCookiesPerClick()));

        cookiesValueLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cookiesValueLabel.setText(minerDaemon.getCookiesValue().toString());

        farmBtn.setText("Keksfarm " + minerDaemon.getFarmCosts());
        farmBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                farmBtnActionPerformed(evt);
            }
        });

        factoryBtn.setText("Keksfabrik " + minerDaemon.getFactoryCosts());
        factoryBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                factoryBtnActionPerformed(evt);
            }
        });

        dealerBtn.setText("Mit Keksen dealen " + minerDaemon.getDealerCosts());
        dealerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dealerBtnActionPerformed(evt);
            }
        });

        jLabel1.setText("Besitz:");

        factoryOwnLabel.setText("Im Besitz:");

        farmOwnLabel.setText("Im Besitz:");

        dealerOwnLabel.setText("Im Besitz:");

        dealerValLabel.setText("0");

        factoryValLabel.setText("0");

        farmValLabel.setText("0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainToolBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cookiesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cookiesValueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1))
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(farmBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(farmOwnLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(farmValLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(factoryOwnLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(factoryValLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(factoryBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dealerBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(dealerOwnLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dealerValLabel)))
                        .addGap(34, 34, 34))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cookiesPerClickLabel)
                            .addComponent(cookiesPerSecondLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cookiesPerClickValueLabel)
                            .addComponent(cookiesPerSecondValueLabel))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cookieBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 917, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(mainToolBar, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cookiesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cookiesValueLabel)
                    .addComponent(farmBtn)
                    .addComponent(factoryBtn)
                    .addComponent(dealerBtn))
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(factoryOwnLabel)
                    .addComponent(farmOwnLabel)
                    .addComponent(dealerOwnLabel)
                    .addComponent(dealerValLabel)
                    .addComponent(factoryValLabel)
                    .addComponent(farmValLabel))
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cookiesPerSecondValueLabel)
                    .addComponent(cookiesPerSecondLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cookiesPerClickLabel)
                    .addComponent(cookiesPerClickValueLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cookieBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 553, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBtnActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitBtnActionPerformed

    private void cookieBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cookieBtnActionPerformed
        minerDaemon.addCookiesToValueByClick();
    }//GEN-LAST:event_cookieBtnActionPerformed

    private void farmBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_farmBtnActionPerformed
        if (minerDaemon.getCookiesValue() > minerDaemon.getFarmCosts()) {
            minerDaemon.buyFarm();
            farmValLabel.setText(new Integer(Integer.parseInt(farmValLabel.getText()) + 1).toString());
            farmBtn.setText("Keksfarm " + f.format(minerDaemon.farmCosts));
        }
    }//GEN-LAST:event_farmBtnActionPerformed

    private void factoryBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_factoryBtnActionPerformed
        if (minerDaemon.getCookiesValue() > minerDaemon.getFactoryCosts()) {
            minerDaemon.buyFactory();
            factoryValLabel.setText(new Integer(Integer.parseInt(factoryValLabel.getText()) + 1).toString());
            factoryBtn.setText("Keksfabrik " + f.format(minerDaemon.factoryCosts));
        }
    }//GEN-LAST:event_factoryBtnActionPerformed

    private void dealerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dealerBtnActionPerformed
        if (minerDaemon.getCookiesValue() > minerDaemon.getDealerCosts()) {
            minerDaemon.buyDealer();
            dealerValLabel.setText(new Integer(Integer.parseInt(dealerValLabel.getText()) + 1).toString());
            dealerBtn.setText("Mit Keksen dealen " + f.format(minerDaemon.dealerCosts));
        }
    }//GEN-LAST:event_dealerBtnActionPerformed

    private void restartBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restartBtnActionPerformed
        minerDaemonThread.interrupt();
        minerDaemon = new MinerDaemon();
        minerDaemonThread = new Thread(minerDaemon);
        minerDaemonThread.start();
    }//GEN-LAST:event_restartBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cookieBtn;
    private javax.swing.JLabel cookiesLabel;
    private javax.swing.JLabel cookiesPerClickLabel;
    private javax.swing.JLabel cookiesPerClickValueLabel;
    private javax.swing.JLabel cookiesPerSecondLabel;
    private javax.swing.JLabel cookiesPerSecondValueLabel;
    private javax.swing.JLabel cookiesValueLabel;
    private javax.swing.JButton dealerBtn;
    private javax.swing.JLabel dealerOwnLabel;
    private javax.swing.JLabel dealerValLabel;
    private javax.swing.JButton exitBtn;
    private javax.swing.JButton factoryBtn;
    private javax.swing.JLabel factoryOwnLabel;
    private javax.swing.JLabel factoryValLabel;
    private javax.swing.JButton farmBtn;
    private javax.swing.JLabel farmOwnLabel;
    private javax.swing.JLabel farmValLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JToolBar mainToolBar;
    private javax.swing.JButton restartBtn;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        while (true) {
            this.cookiesValueLabel.setText(f.format(minerDaemon.getCookiesValue()));
            this.cookiesPerClickValueLabel.setText(f.format(minerDaemon.getCookiesPerClick()));
            this.cookiesPerSecondValueLabel.setText(f.format(minerDaemon.getCookiesPerSecond()));
            try {
                minerDaemon.saveGame();
                Thread.sleep(100);
            } catch (IOException ex) {
                Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
            } catch (InterruptedException ex) {
                Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
}
